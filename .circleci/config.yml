# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/node:18.18.1
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      # Install and save node_modules to cache
      - run: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # run tests
      - run:
          name: Run Unit Tests
          command: yarn test --silent --updateSnapshot --runInBand --no-watchman --testPathPattern="/Board|Communicator|App|Settings|Account|UI/"
  image:
    docker:
      # specify the version you desire here
      - image: cimg/node:18.18.1
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      # Install and save node_modules to cache
      - run: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # Build Docker Image
      # https://circleci.com/docs/2.0/building-docker-images/#overview
      - setup_remote_docker: # (2)
          version: default
          docker_layer_caching: false # (3)
      # build and push Docker image
      - run:
          name: Build Docker Image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            echo $TAG > ./public/version
            docker build -t cboard/cboard:$TAG -t cboard/cboard:latest .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push cboard/cboard:latest
            docker push cboard/cboard:$TAG
  deploy:
    machine: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - '70:3a:28:02:d9:74:fd:be:c8:79:f6:2e:9b:f7:21:04'
      - run: |
          ssh -t $SSH_USERNAME@$SSH_SERVER 'bash -ic "docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            cboard/cboard-bootstrap \
            pull && \
            docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e URL \
            -e SUBDOMAINS \
            -e VALIDATION \
            -e EMAIL \
            -e ONLY_SUBDOMAINS=true \
            -e PUID=”$(id -u $USER)” \
            -e PGID=”$(id -g $USER)” \
            -e AZURE_STORAGE_CONNECTION_STRING \
            -e SENDGRID_API_KEY \
            -e JWT_SECRET \
            -e FACEBOOK_APP_ID \
            -e FACEBOOK_APP_SECRET \
            -e FACEBOOK_CALLBACK_URL \
            -e GOOGLE_APP_ID \
            -e GOOGLE_APP_SECRET \
            -e GOOGLE_CALLBACK_URL \
            cboard/cboard-bootstrap \
            up -d --no-deps cboard" && exit'
workflows:
  version: 2
  build_test_image:
    jobs:
      - build:
          context: azure
      - image:
          context: azure
          requires:
            - build
          filters:
            branches:
              only: master
