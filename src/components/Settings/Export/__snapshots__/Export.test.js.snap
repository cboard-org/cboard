// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Export tests default renderer 1`] = `
<div
  className="Export"
>
  <WithStyles(FullScreenDialog)
    onClose={[Function]}
    open={true}
    title={
      <FormattedMessage
        defaultMessage="Export"
        id="cboard.components.Settings.Export.export"
        values={Object {}}
      />
    }
  >
    <WithStyles(ForwardRef(Paper))
      className="Export__section"
    >
      <WithStyles(ForwardRef(List))>
        <WithStyles(ForwardRef(ListItem))
          className="Export__ListItem"
        >
          <WithStyles(ForwardRef(ListItemText))
            className="Export__ListItemText"
            primary={
              <FormattedMessage
                defaultMessage="Export a single board"
                id="cboard.components.Settings.Export.exportSingle"
                values={Object {}}
              />
            }
            secondary={
              <FormattedMessage
                defaultMessage="This option will export a single board you have from a list of boards. You can choose {cboardLink}, {link} or PDF formats."
                id="cboard.components.Settings.Export.exportSingleSecondary"
                values={
                  Object {
                    "cboardLink": <WithStyles(ForwardRef(Link))
                      href="https://www.cboard.io/help/#HowdoIimportaboardintoCboard"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Cboard
                    </WithStyles(ForwardRef(Link))>,
                    "link": <WithStyles(ForwardRef(Link))
                      href="https://www.openboardformat.org/"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      OpenBoard
                    </WithStyles(ForwardRef(Link))>,
                  }
                }
              />
            }
          />
          <WithStyles(ForwardRef(ListItemSecondaryAction))>
            <div
              className="Export__SelectContainer"
            >
              <div
                className="Export__SelectContainer"
              >
                <WithStyles(ForwardRef(FormControl))
                  className="Export__SelectContainer__Select"
                  error={false}
                  variant="standard"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    id="boards-select-label"
                  />
                  <WithStyles(ForwardRef(Select))
                    autoWidth={false}
                    id="boards-select"
                    labelId="boards-select-label"
                    onChange={[Function]}
                    value=""
                  />
                </WithStyles(ForwardRef(FormControl))>
                <WithStyles(ForwardRef(FormControl))
                  className="Export__SelectContainer__Select"
                  variant="standard"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    id="export-single-select-label"
                  />
                  <WithStyles(ForwardRef(Select))
                    autoWidth={false}
                    id="export-single-select"
                    labelId="export-single-select-label"
                    onChange={[Function]}
                    value=""
                  >
                    <WithStyles(ForwardRef(MenuItem))
                      value="cboard"
                    >
                      Cboard
                    </WithStyles(ForwardRef(MenuItem))>
                    <WithStyles(ForwardRef(MenuItem))
                      value="openboard"
                    >
                      OpenBoard
                    </WithStyles(ForwardRef(MenuItem))>
                    <WithStyles(ForwardRef(MenuItem))
                      value="pdf"
                    >
                      PDF
                    </WithStyles(ForwardRef(MenuItem))>
                    <WithStyles(ForwardRef(MenuItem))
                      value="picsee_pdf"
                    >
                      PicseePal PDF
                    </WithStyles(ForwardRef(MenuItem))>
                  </WithStyles(ForwardRef(Select))>
                </WithStyles(ForwardRef(FormControl))>
              </div>
            </div>
          </WithStyles(ForwardRef(ListItemSecondaryAction))>
        </WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(Divider)) />
        <WithStyles(ForwardRef(ListItem))>
          <WithStyles(ForwardRef(ListItemText))
            className="Export__ListItemText"
            primary={
              <FormattedMessage
                defaultMessage="Export All Boards"
                id="cboard.components.Settings.Export.exportAll"
                values={Object {}}
              />
            }
            secondary={
              <FormattedMessage
                defaultMessage="This option will export ALL the boards you have if you choose {cboardLink} format or {link} format. It will export JUST the current board if you choose PDF format."
                id="cboard.components.Settings.Export.exportAllSecondary"
                values={
                  Object {
                    "cboardLink": <WithStyles(ForwardRef(Link))
                      href="https://www.cboard.io/help/#HowdoIimportaboardintoCboard"
                      target="_blank"
                    >
                      Cboard
                    </WithStyles(ForwardRef(Link))>,
                    "link": <WithStyles(ForwardRef(Link))
                      href="https://www.openboardformat.org/"
                      target="_blank"
                    >
                      OpenBoard
                    </WithStyles(ForwardRef(Link))>,
                  }
                }
              />
            }
          />
          <WithStyles(ForwardRef(ListItemSecondaryAction))>
            <div
              className="Export__SelectContainer"
            >
              <WithStyles(ForwardRef(FormControl))
                className="Export__SelectContainer__Select"
                disabled={false}
                variant="standard"
              >
                <WithStyles(ForwardRef(InputLabel))
                  id="export-all-select-label"
                />
                <WithStyles(ForwardRef(Select))
                  autoWidth={false}
                  id="export-all-select"
                  labelId="export-all-select-label"
                  onChange={[Function]}
                  value=""
                >
                  <WithStyles(ForwardRef(MenuItem))
                    value="cboard"
                  >
                    Cboard
                  </WithStyles(ForwardRef(MenuItem))>
                  <WithStyles(ForwardRef(MenuItem))
                    value="openboard"
                  >
                    OpenBoard
                  </WithStyles(ForwardRef(MenuItem))>
                  <WithStyles(ForwardRef(MenuItem))
                    value="pdf"
                  >
                    PDF
                  </WithStyles(ForwardRef(MenuItem))>
                  <WithStyles(ForwardRef(MenuItem))
                    value="picsee_pdf"
                  >
                    PicseePal PDF
                  </WithStyles(ForwardRef(MenuItem))>
                </WithStyles(ForwardRef(Select))>
              </WithStyles(ForwardRef(FormControl))>
            </div>
          </WithStyles(ForwardRef(ListItemSecondaryAction))>
        </WithStyles(ForwardRef(ListItem))>
      </WithStyles(ForwardRef(List))>
    </WithStyles(ForwardRef(Paper))>
    <WithStyles(ForwardRef(Paper))
      className="Export__section"
    >
      <WithStyles(ForwardRef(List))
        className="Export__List"
        subheader={
          <WithStyles(ForwardRef(ListSubheader))>
            <FormattedMessage
              values={Object {}}
            />
          </WithStyles(ForwardRef(ListSubheader))>
        }
      >
        <WithStyles(ForwardRef(ListItem))>
          <WithStyles(ForwardRef(ListItemText))
            className="Export__ListItemText"
            primary={
              <FormattedMessage
                values={Object {}}
              />
            }
            secondary={
              <FormattedMessage
                values={Object {}}
              />
            }
          />
          <WithStyles(ForwardRef(ListItemSecondaryAction))>
            <div
              className="Export__SelectContainer"
            >
              <WithStyles(ForwardRef(FormControl))
                className="Export__SelectContainer__Select"
                variant="standard"
              >
                <WithStyles(ForwardRef(InputLabel))
                  id="export-all-select-label-size"
                />
                <WithStyles(ForwardRef(Select))
                  autoWidth={false}
                  id="export-all-select-size"
                  labelId="export-all-select-label-size"
                  onChange={[Function]}
                  value={12}
                >
                  <WithStyles(ForwardRef(MenuItem))
                    value={9}
                  >
                    <FormattedMessage
                      values={Object {}}
                    />
                  </WithStyles(ForwardRef(MenuItem))>
                  <WithStyles(ForwardRef(MenuItem))
                    value={12}
                  >
                    <FormattedMessage
                      values={Object {}}
                    />
                  </WithStyles(ForwardRef(MenuItem))>
                  <WithStyles(ForwardRef(MenuItem))
                    value={16}
                  >
                    <FormattedMessage
                      values={Object {}}
                    />
                  </WithStyles(ForwardRef(MenuItem))>
                </WithStyles(ForwardRef(Select))>
              </WithStyles(ForwardRef(FormControl))>
            </div>
          </WithStyles(ForwardRef(ListItemSecondaryAction))>
        </WithStyles(ForwardRef(ListItem))>
      </WithStyles(ForwardRef(List))>
    </WithStyles(ForwardRef(Paper))>
  </WithStyles(FullScreenDialog)>
</div>
`;
