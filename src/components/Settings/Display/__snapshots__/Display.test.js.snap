// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Display tests default renderer 1`] = `
<WithStyles(FullScreenDialog)
  onClose={[Function]}
  onSubmit={[Function]}
  open={true}
  title={
    <FormattedMessage
      defaultMessage="Display"
      id="cboard.components.Settings.Display.display"
      values={Object {}}
    />
  }
>
  <WithStyles(ForwardRef(Paper))
    className="Display"
  >
    <WithStyles(ForwardRef(List))>
      <WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItemText))
          className="Display__ListItemText"
          primary={
            <FormattedMessage
              defaultMessage="UI Size"
              id="cboard.components.Settings.Display.uiSize"
              values={Object {}}
            />
          }
          secondary={
            <FormattedMessage
              defaultMessage="Elements size"
              id="cboard.components.Settings.Display.uiSizeSecondary"
              values={Object {}}
            />
          }
        />
        <WithStyles(ForwardRef(ListItemSecondaryAction))
          className="Display__Options"
        >
          <WithStyles(ForwardRef(FormControl))>
            <WithStyles(ForwardRef(Select))
              aria-label={
                Object {
                  "defaultMessage": "UI Size",
                  "id": "cboard.components.Settings.Display.uiSize",
                }
              }
              id="uiSize"
              name="uiSize"
              onChange={[Function]}
              value="Standard"
            >
              <WithStyles(ForwardRef(MenuItem))
                value="Standard"
              >
                Object {
                  "defaultMessage": "Standard",
                  "id": "cboard.components.Settings.Display.StandardSize",
                }
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                value="Large"
              >
                Object {
                  "defaultMessage": "Large",
                  "id": "cboard.components.Settings.Display.LargeSize",
                }
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                value="ExtraLarge"
              />
            </WithStyles(ForwardRef(Select))>
          </WithStyles(ForwardRef(FormControl))>
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(ListItem))>
      <WithStyles(ForwardRef(Divider)) />
      <WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItemText))
          className="Display__ListItemText"
          primary={
            <FormattedMessage
              values={Object {}}
            />
          }
          secondary={
            <FormattedMessage
              values={Object {}}
            />
          }
        />
        <WithStyles(ForwardRef(ListItemSecondaryAction))
          className="Display__Options"
        >
          <WithStyles(ForwardRef(FormControl))>
            <WithStyles(ForwardRef(Select))
              id="fontFamily"
              name="fontFamily"
              onChange={[Function]}
              style={
                Object {
                  "fontFamily": "Roboto,Helvetica,Arial,sans-serif",
                }
              }
              value="Roboto"
            >
              <WithStyles(ForwardRef(MenuItem))
                style={
                  Object {
                    "fontFamily": "Chilanka,cursive",
                  }
                }
                value="Chilanka"
              >
                Chilanka
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                style={
                  Object {
                    "fontFamily": "Hind",
                  }
                }
                value="Hind"
              >
                Hind
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                style={
                  Object {
                    "fontFamily": "Indie Flower,cursive",
                  }
                }
                value="Indie Flower"
              >
                Indie Flower
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                style={
                  Object {
                    "fontFamily": "Nunito,Roboto,Helvetica Neue,Arial,sans-serif",
                  }
                }
                value="Nunito"
              >
                Nunito
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                style={
                  Object {
                    "fontFamily": "Oswald,sans-serif",
                  }
                }
                value="Oswald"
              >
                Oswald
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                style={
                  Object {
                    "fontFamily": "Roboto,Helvetica,Arial,sans-serif",
                  }
                }
                value="Roboto"
              >
                Roboto
              </WithStyles(ForwardRef(MenuItem))>
            </WithStyles(ForwardRef(Select))>
          </WithStyles(ForwardRef(FormControl))>
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(ListItem))>
      <WithStyles(ForwardRef(Divider)) />
      <WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItemText))
          className="Display__ListItemText"
          primary={
            <FormattedMessage
              defaultMessage="Font Size"
              id="cboard.components.Settings.Display.fontSize"
              values={Object {}}
            />
          }
          secondary={
            <FormattedMessage
              defaultMessage="App font size"
              id="cboard.components.Settings.Display.fontSizeSecondary"
              values={Object {}}
            />
          }
        />
        <WithStyles(ForwardRef(ListItemSecondaryAction))
          className="Display__Options"
        >
          <WithStyles(ForwardRef(FormControl))>
            <WithStyles(ForwardRef(Select))
              aria-label={
                Object {
                  "defaultMessage": "Font Size",
                  "id": "cboard.components.Settings.Display.fontSize",
                }
              }
              id="fontSize"
              name="fontSize"
              onChange={[Function]}
              value="Standard"
            >
              <WithStyles(ForwardRef(MenuItem))
                value="Standard"
              >
                Object {
                  "defaultMessage": "Standard",
                  "id": "cboard.components.Settings.Display.StandardSize",
                }
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                value="Large"
              >
                Object {
                  "defaultMessage": "Large",
                  "id": "cboard.components.Settings.Display.LargeSize",
                }
              </WithStyles(ForwardRef(MenuItem))>
              <WithStyles(ForwardRef(MenuItem))
                value="ExtraLarge"
              />
            </WithStyles(ForwardRef(Select))>
          </WithStyles(ForwardRef(FormControl))>
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(ListItem))>
      <WithStyles(ForwardRef(Divider)) />
      <WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItemText))
          className="Display__ListItemText"
          primary={
            <FormattedMessage
              values={Object {}}
            />
          }
          secondary={
            <FormattedMessage
              values={Object {}}
            />
          }
        />
        <WithStyles(ForwardRef(ListItemSecondaryAction))>
          <WithStyles(ForwardRef(Switch))
            color="secondary"
            onChange={[Function]}
            value="active"
          />
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(ListItem))>
      <WithStyles(ForwardRef(Divider)) />
      <WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItemText))
          className="Display__ListItemText"
          primary={
            <FormattedMessage
              values={Object {}}
            />
          }
          secondary={
            <FormattedMessage
              values={Object {}}
            />
          }
        />
        <WithStyles(ForwardRef(ListItemSecondaryAction))>
          <WithStyles(ForwardRef(Switch))
            checked={false}
            color="secondary"
            onChange={[Function]}
            value="active"
          />
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(ListItem))>
      <WithStyles(ForwardRef(Divider)) />
      <WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItemText))
          className="Display__ListItemText"
          primary={
            <FormattedMessage
              values={Object {}}
            />
          }
          secondary={
            <FormattedMessage
              values={Object {}}
            />
          }
        />
        <WithStyles(ForwardRef(ListItemSecondaryAction))
          className="Display__Options"
        >
          <WithStyles(ForwardRef(FormControl))>
            <WithStyles(ForwardRef(Select))
              id="labelPosition"
              name="labelPosition"
              onChange={[Function]}
            >
              <WithStyles(ForwardRef(MenuItem))
                value="Above"
              />
              <WithStyles(ForwardRef(MenuItem))
                value="Below"
              />
              <WithStyles(ForwardRef(MenuItem))
                value="Hidden"
              />
            </WithStyles(ForwardRef(Select))>
          </WithStyles(ForwardRef(FormControl))>
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(ListItem))>
      <WithStyles(ForwardRef(Divider)) />
      <WithStyles(ForwardRef(ListItem))>
        <WithStyles(ForwardRef(ListItemText))
          className="Display__ListItemText"
          primary={
            <FormattedMessage
              values={Object {}}
            />
          }
          secondary={
            <FormattedMessage
              values={Object {}}
            />
          }
        />
        <WithStyles(ForwardRef(ListItemSecondaryAction))
          className="Display__Options"
        >
          <WithStyles(ForwardRef(Switch))
            color="secondary"
            onChange={[Function]}
            value="active"
          />
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(ListItem))>
    </WithStyles(ForwardRef(List))>
  </WithStyles(ForwardRef(Paper))>
</WithStyles(FullScreenDialog)>
`;
