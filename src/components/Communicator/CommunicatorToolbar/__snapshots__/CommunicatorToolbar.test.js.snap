// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Communicator tests default renderer 1`] = `
<div
  className="CommunicatorToolbar"
>
  <WithStyles(Button)
    className="Communicator__title"
    disabled={false}
    id="boards-button"
    onClick={[Function]}
  >
    <pure(ArrowDropDownIcon) />
    <FormattedMessage
      defaultMessage="Boards"
      id="cboard.components.CommunicatorToolbar.boards"
      values={Object {}}
    />
  </WithStyles(Button)>
  <WithStyles(Menu)
    anchorEl={null}
    className="CommunicatorToolbar__menu"
    id="boards-menu"
    onClose={[Function]}
    open={false}
  >
    <WithStyles(ListItem)
      className="CommunicatorToolbar__menuitem"
      onClick={[Function]}
    >
      <WithStyles(ListItemAvatar)>
        <WithStyles(Avatar)>
          <pure(ViewModuleIcon) />
        </WithStyles(Avatar)>
      </WithStyles(ListItemAvatar)>
      <WithStyles(ListItemText)
        inset={true}
        primary="board-1"
        secondary="0 cboard.components.CommunicatorToolbar.tiles"
      />
    </WithStyles(ListItem)>
    <WithStyles(ListItem)
      className="CommunicatorToolbar__menuitem"
      onClick={[Function]}
    >
      <WithStyles(ListItemAvatar)>
        <WithStyles(Avatar)>
          <pure(ViewModuleIcon) />
        </WithStyles(Avatar)>
      </WithStyles(ListItemAvatar)>
      <WithStyles(ListItemText)
        inset={true}
        primary="board-2-name"
        secondary="0 cboard.components.CommunicatorToolbar.tiles"
      />
    </WithStyles(ListItem)>
  </WithStyles(Menu)>
  <WithTheme(WithWidth(WithMobileDialog))
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title={
      <FormattedMessage
        defaultMessage="Edit Communicator Title"
        id="cboard.components.CommunicatorToolbar.editTitle"
        values={Object {}}
      />
    }
  >
    <TextField
      autoFocus={true}
      fullWidth={true}
      label={
        <FormattedMessage
          defaultMessage="Communicator Title"
          id="cboard.components.CommunicatorToolbar.communicatorTitle"
          values={Object {}}
        />
      }
      margin="dense"
      onChange={[Function]}
      required={true}
      select={false}
      type="text"
      value="some-communicator-title"
      variant="standard"
    />
  </WithTheme(WithWidth(WithMobileDialog))>
  <div
    className="CommunicatorToolbar__group CommunicatorToolbar__group--start"
  >
    <IconButton
      disabled={false}
      label="cboard.components.CommunicatorToolbar.communicators"
      onClick={[Function]}
    >
      <pure(LayersIcon) />
    </IconButton>
    <WithStyles(Typography)
      color="inherit"
      variant="button"
    >
      cboard.components.CommunicatorToolbar.editCommunicator
    </WithStyles(Typography)>
  </div>
  <div
    className="CommunicatorToolbar__group CommunicatorToolbar__group--end"
  />
</div>
`;

exports[`Communicator tests menu behavior 1`] = `
<div
  className="CommunicatorToolbar"
>
  <WithStyles(Button)
    className="Communicator__title"
    disabled={false}
    id="boards-button"
    onClick={[Function]}
  >
    <pure(ArrowDropDownIcon) />
    <FormattedMessage
      defaultMessage="Boards"
      id="cboard.components.CommunicatorToolbar.boards"
      values={Object {}}
    />
  </WithStyles(Button)>
  <WithStyles(Menu)
    anchorEl={null}
    className="CommunicatorToolbar__menu"
    id="boards-menu"
    onClose={[Function]}
    open={false}
  >
    <WithStyles(ListItem)
      className="CommunicatorToolbar__menuitem"
      key="board-1"
      onClick={[Function]}
    >
      <WithStyles(ListItemAvatar)>
        <WithStyles(Avatar)>
          <pure(ViewModuleIcon) />
        </WithStyles(Avatar)>
      </WithStyles(ListItemAvatar)>
      <WithStyles(ListItemText)
        inset={true}
        primary="board-1"
        secondary="0 cboard.components.CommunicatorToolbar.tiles"
      />
    </WithStyles(ListItem)>
    <WithStyles(ListItem)
      className="CommunicatorToolbar__menuitem"
      key="board-2"
      onClick={[Function]}
    >
      <WithStyles(ListItemAvatar)>
        <WithStyles(Avatar)>
          <pure(ViewModuleIcon) />
        </WithStyles(Avatar)>
      </WithStyles(ListItemAvatar)>
      <WithStyles(ListItemText)
        inset={true}
        primary="board-2-name"
        secondary="0 cboard.components.CommunicatorToolbar.tiles"
      />
    </WithStyles(ListItem)>
  </WithStyles(Menu)>
  <WithTheme(WithWidth(WithMobileDialog))
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title={
      <FormattedMessage
        defaultMessage="Edit Communicator Title"
        id="cboard.components.CommunicatorToolbar.editTitle"
        values={Object {}}
      />
    }
  >
    <TextField
      autoFocus={true}
      fullWidth={true}
      label={
        <FormattedMessage
          defaultMessage="Communicator Title"
          id="cboard.components.CommunicatorToolbar.communicatorTitle"
          values={Object {}}
        />
      }
      margin="dense"
      onChange={[Function]}
      required={true}
      select={false}
      type="text"
      value="some-communicator-title"
      variant="standard"
    />
  </WithTheme(WithWidth(WithMobileDialog))>
  <div
    className="CommunicatorToolbar__group CommunicatorToolbar__group--start"
  >
    <IconButton
      disabled={false}
      label="cboard.components.CommunicatorToolbar.communicators"
      onClick={[Function]}
    >
      <pure(LayersIcon) />
    </IconButton>
    <WithStyles(Typography)
      color="inherit"
      variant="button"
    >
      cboard.components.CommunicatorToolbar.editCommunicator
    </WithStyles(Typography)>
  </div>
  <div
    className="CommunicatorToolbar__group CommunicatorToolbar__group--end"
  />
</div>
`;

exports[`Communicator tests menu behavior 2`] = `
<div
  className="CommunicatorToolbar"
>
  <WithStyles(Button)
    className="Communicator__title"
    disabled={false}
    id="boards-button"
    onClick={[Function]}
  >
    <pure(ArrowDropDownIcon) />
    <FormattedMessage
      defaultMessage="Boards"
      id="cboard.components.CommunicatorToolbar.boards"
      values={Object {}}
    />
  </WithStyles(Button)>
  <WithStyles(Menu)
    anchorEl="someElement"
    className="CommunicatorToolbar__menu"
    id="boards-menu"
    onClose={[Function]}
    open={true}
  >
    <WithStyles(ListItem)
      className="CommunicatorToolbar__menuitem"
      key="board-1"
      onClick={[Function]}
    >
      <WithStyles(ListItemAvatar)>
        <WithStyles(Avatar)>
          <pure(ViewModuleIcon) />
        </WithStyles(Avatar)>
      </WithStyles(ListItemAvatar)>
      <WithStyles(ListItemText)
        inset={true}
        primary="board-1"
        secondary="0 cboard.components.CommunicatorToolbar.tiles"
      />
    </WithStyles(ListItem)>
    <WithStyles(ListItem)
      className="CommunicatorToolbar__menuitem"
      key="board-2"
      onClick={[Function]}
    >
      <WithStyles(ListItemAvatar)>
        <WithStyles(Avatar)>
          <pure(ViewModuleIcon) />
        </WithStyles(Avatar)>
      </WithStyles(ListItemAvatar)>
      <WithStyles(ListItemText)
        inset={true}
        primary="board-2-name"
        secondary="0 cboard.components.CommunicatorToolbar.tiles"
      />
    </WithStyles(ListItem)>
  </WithStyles(Menu)>
  <WithTheme(WithWidth(WithMobileDialog))
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title={
      <FormattedMessage
        defaultMessage="Edit Communicator Title"
        id="cboard.components.CommunicatorToolbar.editTitle"
        values={Object {}}
      />
    }
  >
    <TextField
      autoFocus={true}
      fullWidth={true}
      label={
        <FormattedMessage
          defaultMessage="Communicator Title"
          id="cboard.components.CommunicatorToolbar.communicatorTitle"
          values={Object {}}
        />
      }
      margin="dense"
      onChange={[Function]}
      required={true}
      select={false}
      type="text"
      value="some-communicator-title"
      variant="standard"
    />
  </WithTheme(WithWidth(WithMobileDialog))>
  <div
    className="CommunicatorToolbar__group CommunicatorToolbar__group--start"
  >
    <IconButton
      disabled={false}
      label="cboard.components.CommunicatorToolbar.communicators"
      onClick={[Function]}
    >
      <pure(LayersIcon) />
    </IconButton>
    <WithStyles(Typography)
      color="inherit"
      variant="button"
    >
      cboard.components.CommunicatorToolbar.editCommunicator
    </WithStyles(Typography)>
  </div>
  <div
    className="CommunicatorToolbar__group CommunicatorToolbar__group--end"
  />
</div>
`;

exports[`Communicator tests switching boards behavior 1`] = `
<div
  className="CommunicatorToolbar"
>
  <WithStyles(Button)
    className="Communicator__title"
    disabled={false}
    id="boards-button"
    onClick={[Function]}
  >
    <pure(ArrowDropDownIcon) />
    <FormattedMessage
      defaultMessage="Boards"
      id="cboard.components.CommunicatorToolbar.boards"
      values={Object {}}
    />
  </WithStyles(Button)>
  <WithStyles(Menu)
    anchorEl={null}
    className="CommunicatorToolbar__menu"
    id="boards-menu"
    onClose={[Function]}
    open={false}
  >
    <WithStyles(ListItem)
      className="CommunicatorToolbar__menuitem"
      key="board-1"
      onClick={[Function]}
    >
      <WithStyles(ListItemAvatar)>
        <WithStyles(Avatar)>
          <pure(ViewModuleIcon) />
        </WithStyles(Avatar)>
      </WithStyles(ListItemAvatar)>
      <WithStyles(ListItemText)
        inset={true}
        primary="board-1"
        secondary="0 cboard.components.CommunicatorToolbar.tiles"
      />
    </WithStyles(ListItem)>
    <WithStyles(ListItem)
      className="CommunicatorToolbar__menuitem"
      key="board-2"
      onClick={[Function]}
    >
      <WithStyles(ListItemAvatar)>
        <WithStyles(Avatar)>
          <pure(ViewModuleIcon) />
        </WithStyles(Avatar)>
      </WithStyles(ListItemAvatar)>
      <WithStyles(ListItemText)
        inset={true}
        primary="board-2-name"
        secondary="0 cboard.components.CommunicatorToolbar.tiles"
      />
    </WithStyles(ListItem)>
  </WithStyles(Menu)>
  <WithTheme(WithWidth(WithMobileDialog))
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title={
      <FormattedMessage
        defaultMessage="Edit Communicator Title"
        id="cboard.components.CommunicatorToolbar.editTitle"
        values={Object {}}
      />
    }
  >
    <TextField
      autoFocus={true}
      fullWidth={true}
      label={
        <FormattedMessage
          defaultMessage="Communicator Title"
          id="cboard.components.CommunicatorToolbar.communicatorTitle"
          values={Object {}}
        />
      }
      margin="dense"
      onChange={[Function]}
      required={true}
      select={false}
      type="text"
      value="some-communicator-title"
      variant="standard"
    />
  </WithTheme(WithWidth(WithMobileDialog))>
  <div
    className="CommunicatorToolbar__group CommunicatorToolbar__group--start"
  >
    <IconButton
      disabled={false}
      label="cboard.components.CommunicatorToolbar.communicators"
      onClick={[Function]}
    >
      <pure(LayersIcon) />
    </IconButton>
    <WithStyles(Typography)
      color="inherit"
      variant="button"
    >
      cboard.components.CommunicatorToolbar.editCommunicator
    </WithStyles(Typography)>
  </div>
  <div
    className="CommunicatorToolbar__group CommunicatorToolbar__group--end"
  />
</div>
`;

exports[`Communicator tests switching boards behavior 2`] = `
<div
  className="CommunicatorToolbar"
>
  <WithStyles(Button)
    className="Communicator__title"
    disabled={false}
    id="boards-button"
    onClick={[Function]}
  >
    <pure(ArrowDropDownIcon) />
    <FormattedMessage
      defaultMessage="Boards"
      id="cboard.components.CommunicatorToolbar.boards"
      values={Object {}}
    />
  </WithStyles(Button)>
  <WithStyles(Menu)
    anchorEl="someElement"
    className="CommunicatorToolbar__menu"
    id="boards-menu"
    onClose={[Function]}
    open={true}
  >
    <WithStyles(ListItem)
      className="CommunicatorToolbar__menuitem"
      key="board-1"
      onClick={[Function]}
    >
      <WithStyles(ListItemAvatar)>
        <WithStyles(Avatar)>
          <pure(ViewModuleIcon) />
        </WithStyles(Avatar)>
      </WithStyles(ListItemAvatar)>
      <WithStyles(ListItemText)
        inset={true}
        primary="board-1"
        secondary="0 cboard.components.CommunicatorToolbar.tiles"
      />
    </WithStyles(ListItem)>
    <WithStyles(ListItem)
      className="CommunicatorToolbar__menuitem"
      key="board-2"
      onClick={[Function]}
    >
      <WithStyles(ListItemAvatar)>
        <WithStyles(Avatar)>
          <pure(ViewModuleIcon) />
        </WithStyles(Avatar)>
      </WithStyles(ListItemAvatar)>
      <WithStyles(ListItemText)
        inset={true}
        primary="board-2-name"
        secondary="0 cboard.components.CommunicatorToolbar.tiles"
      />
    </WithStyles(ListItem)>
  </WithStyles(Menu)>
  <WithTheme(WithWidth(WithMobileDialog))
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
    title={
      <FormattedMessage
        defaultMessage="Edit Communicator Title"
        id="cboard.components.CommunicatorToolbar.editTitle"
        values={Object {}}
      />
    }
  >
    <TextField
      autoFocus={true}
      fullWidth={true}
      label={
        <FormattedMessage
          defaultMessage="Communicator Title"
          id="cboard.components.CommunicatorToolbar.communicatorTitle"
          values={Object {}}
        />
      }
      margin="dense"
      onChange={[Function]}
      required={true}
      select={false}
      type="text"
      value="some-communicator-title"
      variant="standard"
    />
  </WithTheme(WithWidth(WithMobileDialog))>
  <div
    className="CommunicatorToolbar__group CommunicatorToolbar__group--start"
  >
    <IconButton
      disabled={false}
      label="cboard.components.CommunicatorToolbar.communicators"
      onClick={[Function]}
    >
      <pure(LayersIcon) />
    </IconButton>
    <WithStyles(Typography)
      color="inherit"
      variant="button"
    >
      cboard.components.CommunicatorToolbar.editCommunicator
    </WithStyles(Typography)>
  </div>
  <div
    className="CommunicatorToolbar__group CommunicatorToolbar__group--end"
  />
</div>
`;
